library(foreign)
data=read.dta("gjv.dta")
summary(data)
data_ext=read.csv("Extension_Data.csv")
View(data_ext)
data_ext$Net.bilateral.aid.flows.from.DAC.donors..United.States..current.US....DC.DAC.USAL.CD.==".."
data_ext$US_aid=data_ext$Net.bilateral.aid.flows.from.DAC.donors..United.States..current.US....DC.DAC.USAL.CD.
data_ext$US_aid[data_ext$US_aid==".."]=NA
summary(data_ext)
data_ext$net_aid=data_ext$Net.official.aid.received..constant.2013.US....DT.ODA.OATL.KD.
data_ext$FDI=Foreign.direct.investment..net.inflows....of.GDP...BX.KLT.DINV.WD.GD.ZS.
data_ext$FDI=data_ext$Foreign.direct.investment..net.inflows....of.GDP...BX.KLT.DINV.WD.GD.ZS.
data_ext$deaths=data_ext$Battle.related.deaths..number.of.people...VC.BTL.DETH.
data_ext$US_aid[data_ext$US_aid==".."]=NA
library(foreign)
data=read.dta("gjv.dta")
summary(data)
data_ext2=read.csv("Extension_Data_2.csv")
summary(data_ext2)
data_ext2$year=data_ext$ï..Time
data_ext2$year=data_ext2$ï..Time
data_ext2$year=data_ext2$ï..Time
data_ext2$food_price=data_ext2$Agr..Food..2010.100..real.2010...KIFOOD.
data_ext2$grain_price=data_ext2$Agr..Food..Grains..2010.100..real.2010...KIGRAINS.
data_ext2$raw_price=data_ext2$Agr..Raw.materials..2010.100..real.2010...KIRAW_MATERIAL.
final2=merge(data,data_ext2, by=c("year"), all.x=T)
write.csv(final,"final.csv")
write.csv(final2,"final2.csv")
summary(final2)
lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year), weights=pop)
lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year), weights=pop, data=data)
lm6=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year), weights=pop, data=data)
summary(lm6)
lm6=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year) + factor(country), weights=pop, data=data)
summary(lm6)
lm6.vcovCL=cluster.vcov(lm6, data$country)
library(multiwayvcov)
lm6.vcovCL=cluster.vcov(lm6, data$country)
coeftest(lm6, lm6.vcovCL)
library(lmtest)
coeftest(lm6, lm6.vcovCL)
coeftest(lm6, vcov=vcovHC(lm6,type="HC0",cluster="country"))
library(sandwich)
library(lmtest)
coeftest(lm6, vcov=vcovHC(lm6,type="HC0",cluster="country"))
library(sandwich)
coeftest(lm6, vcov=vcovHC(lm6,type="HC0",cluster="country"))
source('~/GitHub/ps750/W2_Growth/Robustness.R', echo=TRUE)
library(lmtest)
coeftest(lm6, lm6.vcovCL)
lm8=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year) + factor(year)*factor(continent) + factor(country) + primacy_prev + auto_prev + drought_prev + r2density_prev + popgrowthrate_prev + conflict_prev + pop, weights=pop, data=data)
summary(data)
summary(data$primacy_prev)
lm8=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year) + factor(year)*factor(continent) + factor(country) + primacy_prev + auto_prev + drought_prev + r2density_prev + popgrowthrate_prev + conflict_prev + pop, weights=pop, data=data)
lm8=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + primacy_prev + auto_prev + drought_prev + r2density_prev + popgrowthrate_prev + conflict_prev + pop + factor(year) + factor(year)*factor(continent) + factor(country) , weights=pop, data=data)
summary(lm8)
lm8=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + primacy_prev + auto_prev + drought_prev + r2density_prev + popgrowthrate_prev + conflict_prev + pop + factor(year) + factor(country) + factor(year)*factor(continent), weights=pop, data=data)
summary(lm8)
lm8=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + primacy_prev + auto_prev + drought_prev + r2density_prev + popgrowthrate_prev + conflict_prev + pop + factor(year) + factor(country) + factor(year)*factor(continent), weights=pop, data=data)
summary(lm8)
summary(data$primacy_prev)
lm8=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + primacy_prev + auto_prev + drought_prev + r2density_prev + popgrowthrate_prev + conflict_prev + pop + factor(year) + factor(country) + factor(year)*factor(continent), weights=pop, data=data)
summary(lm8)
summary(data$primacy_prev)
lm8=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + auto_prev + drought_prev + r2density_prev + popgrowthrate_prev + conflict_prev + pop + factor(year) + factor(country) + factor(year)*factor(continent), weights=pop, data=data)
summary(lm8)
lm8=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + primacy_prev + auto_prev + drought_prev + r2density_prev + popgrowthrate_prev + conflict_prev + pop + factor(year) + factor(country) + factor(year)*factor(continent), weights=pop, data=data)
summary(lm8)
data2=read.csv("final2.csv")
lm7=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year) + factor(year)*factor(continent) + factor(country), weights=pop, data=data)
summary(lm7)
lm7.vcovCL=cluster.vcov(lm7, data$country)
coeftest(lm7, lm7.vcovCL)
coeftest(lm7, vcov=vcovHC(lm7,type="HC0",cluster="country"))
lm6ext1=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + food_price + factor(year) + factor(country), weights=pop, data2=data2)
data2=read.csv("final2.csv")
lm6ext1=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + food_price + factor(year) + factor(country), weights=pop, data2=data2)
summary(lm6ext1)
data2$urbrate
data2$urbrate=as.numeric(data2$urbrate)
lm6ext1=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + food_price + factor(year) + factor(country), weights=pop, data2=data2)
lm6ext1=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + food_price + factor(year) + factor(country), weights=pop, data=data2)
summary(lm6ext1)
lm7ext1=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + food_price + factor(year) + factor(year)*factor(continent) + factor(country), weights=pop, data=data2)
summary(lm7ext1)
lm6ext1.vcovCL=cluster.vcov(lm6ext1, data2$country)
coeftest(lm6ext1, lm6ext1.vcovCL)
coeftest(lm6ext1, vcov=vcovHC(lm6ext1,type="HC0",cluster="country"))
lm6=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year) + factor(country), weights=pop, data=data)
summary(lm6)
lm6ext1=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + food_price + factor(year) + factor(country), weights=pop, data=data2)
summary(lm6ext1)
lm6ext2=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + grain_price + factor(year) + factor(country), weights=pop, data=data2)
summary(lm6ext2)
lm6ext2.vcovCL=cluster.vcov(lm6ext2, data2$country)
coeftest(lm6ext2, lm6ext2.vcovCL)
coeftest(lm6ext2, vcov=vcovHC(lm6ext2,type="HC0",cluster="country"))
lm7ext2=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + grain_price + factor(year) + factor(year)*factor(continent) + factor(country), weights=pop, data=data2)
summary(lm7ext2)
lm7ext2.vcovCL=cluster.vcov(lm7ext2, data2$country)
coeftest(lm7ext2, lm7ext2.vcovCL)
coeftest(lm7ext2, vcov=vcovHC(lm7ext2,type="HC0",cluster="country"))
lm6ext3=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + raw_price + factor(year) + factor(country), weights=pop, data=data2)
summary(lm6ext3)
lm6ext3.vcovCL=cluster.vcov(lm6ext3, data2$country)
coeftest(lm6ext3, lm6ext3.vcovCL)
coeftest(lm6ext3, vcov=vcovHC(lm6ext3,type="HC0",cluster="country"))
lm7ext3=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + raw_price + factor(year) + factor(year)*factor(continent) + factor(country), weights=pop, data=data2)
summary(lm7ext3)
results6=boot(data=data_2010, statistic=boot.function, R=1000, formula=lm6)
results6
plot(results6, index=2)
results7=boot(data=data_2010, statistic=boot.function, R=1000, formula=lm7)
results7
plot(results7, index=2)
?boot
clusbootreg <- function(formula, data, cluster, reps=1000){
reg1 <- lm(formula, data)
clusters <- names(table(cluster))
sterrs <- matrix(NA, nrow=reps, ncol=length(coef(reg1)))
for(i in 1:reps){
index <- sample(1:length(clusters), length(clusters), replace=TRUE)
aa <- clusters[index]
bb <- table(aa)
bootdat <- NULL
for(j in 1:max(bb)){
cc <- data[cluster %in% names(bb[bb %in% j]),]
for(k in 1:j){
bootdat <- rbind(bootdat, cc)
}
}
sterrs[i,] <- coef(lm(formula, bootdat))
}
val <- cbind(coef(reg1),apply(sterrs,2,sd))
colnames(val) <- c("Estimate","Std. Error")
return(val)
}
results6=boot(data=data, statistic=boot.function, R=1000, formula=lm6)
results6
plot(results6, index=2)
lm6=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year) + factor(country), weights=pop, data=data)
summary(lm6)
library(foreign) # Load foreign package to read dta (stata) files
data=read.dta("gjv.dta") # Read main replication dataset
summary(data) # Check out the summary statistics
################################
### REPLICATION OF INITIAL REGRESSIONS (TABLE 1)
################################
# We replicate table 1 in R
# Here we begin with the OLS regressions, later use robust standard errors
data_2010=data[data$year==2010,] # Only use year 2010 data for cross-sectional analysis
summary(data_2010)
lm1 = lm(urbrate ~ mfgserv_gdp2010 + nrx2_mean, weights=pop, data=data_2010) # Main regression, note: weighted by population
summary(lm1)
lm2 = lm(urbrate ~ mfgserv_gdp2010 + nrx2_mean + factor(continent), weights=pop, data=data_2010)
summary(lm2)
lm3 = lm(urbrate ~ mfgserv_gdp2010 + nrx2_mean + factor(continent) + primacy2010 + threshold_level + factor(type) + smallisland + area + r2density + popgrowthrate + pop + auto + conflict + landlocked + drought, weights=pop, data=data_2010)
summary(lm3)
lm4 = lm(urbrate ~ mfgserv_gdp2010 + nrx2_mean + nrx1960 + urbrate1960 + factor(continent) + primacy2010 + threshold_level + factor(type) + smallisland + area + r2density + popgrowthrate + pop + auto + conflict + landlocked + drought, weights=pop, data=data_2010)
summary(lm4)
lm5 = lm(urbrate ~ mfgserv_gdp2010 + nrx2_mean + nrx1960 + urbrate1960 + factor(region) + primacy2010 + threshold_level + factor(type) + smallisland + area + r2density + popgrowthrate + pop + auto + conflict + landlocked + drought, weights=pop, data=data_2010)
summary(lm5)
################################
### ROBUST STANDARD ERRORS
################################
# We need the following packages to estimate robust standard errors
library(sandwich)
library(lmtest)
coeftest(lm1, vcov = vcovHC(lm1, "HC0")) # Robust standard errors for all regressions
coeftest(lm2, vcov = vcovHC(lm2, "HC0"))
coeftest(lm3, vcov = vcovHC(lm3, "HC0"))
coeftest(lm4, vcov = vcovHC(lm4, "HC0"))
coeftest(lm5, vcov = vcovHC(lm5, "HC0"))
# Please note that we have included replications for
# all tables/all regressions (including descriptions) as stata do file
################################
### BOOTSTRAPPING
################################
# We need the boot package for the boostrapping procedure
library(boot)
# We create a boot function, which is the foundation for the boostrapping procedure
boot.function=function(formula, data, indices){
d=data[indices,]
fit=lm(formula, data=d)
return(coef(fit))
}
# We estimate 1000 regressions based on samples of the data, then inspect the distribution of the coefficient of interest
results1=boot(data=data_2010, statistic=boot.function, R=1000, formula=lm1) # Bootstrap based on our dataset
results1
plot(results1, index=2)
results2=boot(data=data_2010, statistic=boot.function, R=1000, formula=lm2)
results2
plot(results2, index=2)
results3=boot(data=data_2010, statistic=boot.function, R=1000, formula=lm3)
results3
plot(results3, index=2)
results4=boot(data=data_2010, statistic=boot.function, R=1000, formula=lm4)
results4
plot(results4, index=2)
results5=boot(data=data_2010, statistic=boot.function, R=1000, formula=lm5)
results5
plot(results5, index=2)
# Please note that we did not include robust standard errors here, so the bootstrap procedure is imperfect
################################
### REPLICATION OF PANEL REGRESSIONS (TABLE 3)
################################
# Here we use bootstrapping to look at the robustness of the panel regressions (table 3)
# Again, the imperfection here is that we have not applied robust standard errors (greater complexity)
library(multiwayvcov)
library(lmtest)
library(sandwich)
################################
### FIRST REGRESSION
################################
lm6=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year) + factor(country), weights=pop, data=data)
summary(lm6)
lm6.vcovCL=cluster.vcov(lm6, data$country)
coeftest(lm6, lm6.vcovCL)
coeftest(lm6, vcov=vcovHC(lm6,type="HC0",cluster="country"))
################################
### SECOND REGRESSION
################################
lm7=lm(urbrate ~ nrx_previous + mfg_previous + mfgserv_gdp2010t + factor(year) + factor(year)*factor(continent) + factor(country), weights=pop, data=data)
summary(lm7)
lm7.vcovCL=cluster.vcov(lm7, data$country)
coeftest(lm7, lm7.vcovCL)
coeftest(lm7, vcov=vcovHC(lm7,type="HC0",cluster="country"))
################################
### BOOTSTRAPPING
################################
results6=boot(data=data, statistic=boot.function, R=1000, formula=lm6)
results6
plot(results6, index=2)
results7=boot(data=data, statistic=boot.function, R=1000, formula=lm7)
results7
plot(results7, index=2)
clusbootreg(lm6, data=data, cluster=country)
clusbootreg(lm6, data=data, cluster=data$country)
results6
results7
